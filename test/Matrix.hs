module Matrix where

import System.Exit
import System.Process

main :: IO ()
main = do
--    results <- mapM test [(x,y) | x <- [20..50], y <- [100,105..215]] -- FIXME
    results <- mapM test pass
    let res = (concatMap toString . map toRes . filter ok $ results)
           ++ "\n"
           ++ (concatMap toString . map toRes . filter ng $ results)
    writeFile "RES" res
  where
    toString (x,y) = show x ++ " " ++ show y ++ "\n"
    toRes :: (Bool,(Int,Int)) -> (Float,Float)
    toRes (_,(x,y)) = (fromIntegral x / 10, fromIntegral y / 100)
    ok = fst
    ng = not . fst

test :: (Int, Int) -> IO (Bool,(Int, Int))
test (n,m) = do
  system $ delta n ++ " " ++ from ++ " | " ++ ratio m ++ " > " ++ to
  status <- system "runghc -i.. -DMETHOD=3 -DTEST Test.hs --maximum-generated-tests=10000" -- FIXME
  case status of
      ExitSuccess -> return (True,(n,m))
      _           -> return (False,(n,m))
    
delta :: Int -> String
delta n = "sed -e 's/^deltaU = [0-9][0-9]/deltaU = " ++ show n ++  "/'"

ratio :: Int -> String
ratio n = "sed -e 's/^ratioU = [0-9][0-9][0-9]/ratioU = " ++ show n ++  "/'"

from :: String
from = "../Data/SMap/Balance-test.hs"

to :: String
to = "../Data/SMap/Balance.hs"

pass :: [(Int,Int)]
pass = [(24,135)
       ,(24,14)
       ,(25,12)
       ,(25,13)
       ,(25,135)
       ,(25,14)
       ,(25,145)
       ,(25,15)
       ,(26,12)
       ,(26,125)
       ,(26,13)
       ,(26,135)
       ,(26,14)
       ,(26,145)
       ,(26,15)
       ,(27,12)
       ,(27,125)
       ,(27,13)
       ,(27,135)
       ,(27,14)
       ,(27,145)
       ,(27,15)
       ,(28,11)
       ,(28,115)
       ,(28,12)
       ,(28,125)
       ,(28,13)
       ,(28,135)
       ,(28,14)
       ,(28,145)
       ,(28,15)
       ,(29,12)
       ,(29,125)
       ,(29,13)
       ,(29,135)
       ,(29,14)
       ,(29,145)
       ,(29,15)
       ,(30,115)
       ,(30,12)
       ,(30,125)
       ,(30,13)
       ,(30,135)
       ,(30,14)
       ,(30,145)
       ,(30,15)
       ,(30,155)
       ,(30,16)
       ,(30,165)
       ,(30,17)
       ,(30,175)
       ,(30,18)
       ,(30,185)
       ,(30,19)
       ,(30,195)
       ,(30,20)
       ,(31,12)
       ,(31,125)
       ,(31,13)
       ,(31,135)
       ,(31,14)
       ,(31,145)
       ,(31,15)
       ,(31,155)
       ,(31,16)
       ,(31,165)
       ,(31,17)
       ,(31,175)
       ,(31,18)
       ,(31,185)
       ,(31,19)
       ,(31,195)
       ,(31,20)
       ,(32,11)
       ,(32,115)
       ,(32,12)
       ,(32,125)
       ,(32,13)
       ,(32,135)
       ,(32,14)
       ,(32,145)
       ,(32,15)
       ,(32,155)
       ,(32,16)
       ,(32,165)
       ,(32,17)
       ,(32,175)
       ,(32,18)
       ,(32,185)
       ,(32,19)
       ,(32,195)
       ,(32,20)
       ,(33,12)
       ,(33,125)
       ,(33,13)
       ,(33,135)
       ,(33,14)
       ,(33,145)
       ,(33,15)
       ,(33,155)
       ,(33,16)
       ,(33,165)
       ,(33,17)
       ,(33,175)
       ,(33,18)
       ,(33,185)
       ,(33,19)
       ,(33,195)
       ,(33,20)
       ,(34,105)
       ,(34,11)
       ,(34,12)
       ,(34,125)
       ,(34,13)
       ,(34,135)
       ,(34,14)
       ,(34,145)
       ,(34,15)
       ,(34,155)
       ,(34,16)
       ,(34,165)
       ,(34,17)
       ,(34,175)
       ,(34,18)
       ,(34,185)
       ,(34,19)
       ,(34,195)
       ,(34,20)
       ,(35,105)
       ,(35,115)
       ,(35,12)
       ,(35,125)
       ,(35,13)
       ,(36,11)
       ,(36,115)
       ,(36,12)
       ,(36,125)
       ,(36,13)
       ,(37,105)
       ,(37,11)
       ,(37,115)
       ,(37,12)
       ,(37,125)
       ,(37,13)
       ,(38,105)
       ,(38,11)
       ,(38,115)
       ,(38,12)
       ,(38,125)
       ,(38,13)
       ,(39,105)
       ,(39,115)
       ,(39,12)
       ,(39,125)
       ,(39,13)
       ,(40,11)
       ,(40,115)
       ,(40,12)
       ,(40,125)
       ,(40,13)
       ,(40,135)
       ,(40,14)
       ,(40,145)
       ,(40,15)
       ,(40,155)
       ,(40,16)
       ,(40,165)
       ,(41,105)
       ,(41,11)
       ,(41,115)
       ,(41,12)
       ,(41,125)
       ,(41,13)
       ,(41,135)
       ,(41,14)
       ,(41,145)
       ,(41,15)
       ,(41,155)
       ,(41,16)
       ,(41,165)
       ,(42,105)
       ,(42,11)
       ,(42,115)
       ,(42,12)
       ,(42,125)
       ,(42,13)
       ,(42,135)
       ,(42,14)
       ,(42,145)
       ,(42,15)
       ,(42,155)
       ,(42,16)
       ,(42,165)
       ,(43,105)
       ,(43,11)
       ,(43,115)
       ,(43,12)
       ,(43,125)
       ,(43,13)
       ,(43,135)
       ,(43,14)
       ,(43,145)
       ,(43,15)
       ,(43,155)
       ,(43,16)
       ,(43,165)
       ,(44,105)
       ,(44,11)
       ,(44,115)
       ,(44,12)
       ,(44,125)
       ,(44,13)
       ,(44,135)
       ,(44,14)
       ,(44,145)
       ,(44,15)
       ,(44,155)
       ,(44,16)
       ,(44,165)
       ,(45,11)
       ,(45,115)
       ,(45,12)
       ,(45,125)]
